@model PaginatCourseViewModel
@{
    ViewData["Title"] = "Courses";
    // Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<h1>Courses</h1>

<div class="mb-3 container d-flex justify-content-between">
    <div>
        <a asp-action="New" class="btn btn-primary">Create New Couse</a>
    </div>
    <div>
        <!-- search section -->
        <form method="get" asp-action="Search" class="form-inline my-2 my-lg-0 d-flex gap-1">
            <input class="form-control mr-sm-2" type="search" placeholder="Search by Name" aria-label="Search" name="searchString" value="@ViewData["CurrentFilter"]">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        </form>
    </div>
</div>

<div class="container">
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Degree</th>
                <th>MinDegree</th>
                <th>Hours</th>
                <th>Department</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in Model.Courses)
            {
                <tr>
                    <td>@course.Id</td>
                    <td>@course.Name</td>
                    <td>@course.Degree</td>
                    <td>@course.MinDegree</td>
                    <td>@course.Hours</td>
                    <td>@course.Department?.Name</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@course.Id" class="btn btn-warning">Edit</a>
                    </td>
                </tr>
            }
        </tbody>

    </table>
    <div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                @* <li class="page-item"><a class="page-link" href="#">Previous</a></li> *@
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-size="@Model.PageSize">Previous</a></li>
                }
                else
                {
                    <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                }

                @* <li class="page-item"><a class="page-link" href="#">1</a></li> *@
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-size="@Model.PageSize">@i</a></li>
                    }
                }
                @* <li class="page-item"><a class="page-link" href="#">Next</a></li> *@
                @if (Model.HasNextPage)
                {
                    <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-size="@Model.PageSize">Next</a></li>
                }
                else
                {
                    <li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
                }
                <!-- page size input-->
                <li class="page-item">
                    <form method="get" asp-action="Index" class="form-inline my-2 my-lg-0 d-flex gap-1">
                        <label for="pageSize" class="mr-2"> </label>
                        <input type="number" id="pageSize" name="size" class="form-control" value="@Model.PageSize" min="1" style="width: 80px;">
                        <input type="hidden" name="page" value="1" />
                        <button class="btn btn-primary ml-2" type="submit">Go</button>
                    </form>
                </li>
            </ul>
        </nav>
        
    </div>

</div>

